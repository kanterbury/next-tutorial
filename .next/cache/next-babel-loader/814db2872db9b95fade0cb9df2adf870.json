{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kanta/Desktop/next-tutorial/components/List.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport mysql from 'mysql';\n\nvar List = function List(props) {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dbList = _useState2[0],\n      setDbList = _useState2[1];\n\n  var mysql_setting = {\n    host: \"localhost\",\n    user: \"root\",\n    password: \"password\",\n    database: \"list_app\"\n  };\n  var connection = mysql.createConnection(mysql_setting);\n  connection.connect();\n  connection.query('select * from users', function (error, results, fields) {\n    if (error) {\n      throw error;\n    }\n\n    setDbList(results);\n  });\n  return __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, dbList.map(function (item) {\n    return __jsx(\"li\", {\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, item.name);\n  }));\n};\n\n_s(List, \"HV0mdjIJbXvRb/Cb58g4jVTiTUI=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/kanta/Desktop/next-tutorial/components/List.js"],"names":["React","mysql","List","props","useState","dbList","setDbList","mysql_setting","host","user","password","database","connection","createConnection","connect","query","error","results","fields","map","item","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACMC,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACfC,MADe;AAAA,MACPC,SADO;;AAGtB,MAAMC,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE,WADc;AAEpBC,IAAAA,IAAI,EAAE,MAFc;AAGpBC,IAAAA,QAAQ,EAAE,UAHU;AAIpBC,IAAAA,QAAQ,EAAE;AAJU,GAAtB;AAOA,MAAMC,UAAU,GAAGX,KAAK,CAACY,gBAAN,CAAuBN,aAAvB,CAAnB;AACAK,EAAAA,UAAU,CAACE,OAAX;AAEAF,EAAAA,UAAU,CAACG,KAAX,CAAiB,qBAAjB,EAAwC,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkC;AACxE,QAAIF,KAAJ,EAAW;AACT,YAAMA,KAAN;AACD;;AACDV,IAAAA,SAAS,CAACW,OAAD,CAAT;AACD,GALD;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,MAAM,CAACc,GAAP,CAAW,UAAAC,IAAI;AAAA,WACd;AAAI,MAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBA,IAAI,CAACC,IAArB,CADc;AAAA,GAAf,CADH,CADF;AAOD,CA3BD;;GAAMnB,I;;KAAAA,I;AA6BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport mysql from 'mysql';\n\nconst List = (props) => {\n  const [dbList, setDbList] = useState([]);\n\n  const mysql_setting = {\n    host: \"localhost\",\n    user: \"root\",\n    password: \"password\",\n    database: \"list_app\",\n  };\n\n  const connection = mysql.createConnection(mysql_setting);\n  connection.connect();\n\n  connection.query('select * from users', function (error, results, fields) {\n    if (error) {\n      throw error\n    }\n    setDbList(results);\n  });\n\n  return (\n    <ul>\n      {dbList.map(item => (\n        <li key={item}>{item.name}</li>\n      ))}\n    </ul>\n  )\n};\n\nexport default List;"]},"metadata":{},"sourceType":"module"}