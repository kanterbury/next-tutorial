{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nexport default class Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"msgStyle\", {\n      fontSize: \"16pt\",\n      backgroundColor: \"#eef\",\n      padding: \"5px\"\n    });\n\n    this.state = {\n      counter: 0,\n      msg: 'counter: 0'\n    };\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doAction() {\n    this.setState(state => {\n      const num = state.counter + 1;\n      return {\n        counter: num,\n        msg: 'counter: ' + num\n      };\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/kanta/Desktop/next-tutorial/components/Counter.js"],"names":["React","Component","Counter","constructor","props","fontSize","backgroundColor","padding","state","counter","msg","doAction","bind","setState","num"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAO7CE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,sCANP;AACTC,MAAAA,QAAQ,EAAE,MADD;AAETC,MAAAA,eAAe,EAAE,MAFR;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAMO;;AAEhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,QAAQ,GAAE;AACR,SAAKE,QAAL,CAAeL,KAAD,IAAW;AACvB,YAAMM,GAAG,GAAGN,KAAK,CAACC,OAAN,GAAgB,CAA5B;AACA,aAAO;AACLA,QAAAA,OAAO,EAAEK,GADJ;AAELJ,QAAAA,GAAG,EAAE,cAAcI;AAFd,OAAP;AAID,KAND;AAOD;;AAxB4C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Counter extends Component {\n  msgStyle = {\n    fontSize: \"16pt\",\n    backgroundColor: \"#eef\",\n    padding: \"5px\"\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {\n      counter: 0,\n      msg: 'counter: 0',\n    };\n    this.doAction = this.doAction.bind(this);\n  }\n\n  doAction(){\n    this.setState((state) => {\n      const num = state.counter + 1;\n      return({\n        counter: num,\n        msg: 'counter: ' + num\n      });\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}